import pandas as pd
import io
import ipywidgets as widgets
from IPython.display import display
import matplotlib.pyplot as plt
import seaborn as sns

# Function to load and display the dataset
def load_and_display_data(file):
    try:
        # Use BytesIO to read the file from bytes data
        df = pd.read_csv(io.BytesIO(file['content']))
        # Display the first few rows
        display(df.head())
        return df
    except Exception as e:
        print(f"Error loading file: {e}")
        return None

# Function to plot data
def plot_data(df):
    if df is not None:
        if 'timestamp' in df.columns:
            df['timestamp'] = pd.to_datetime(df['timestamp'])
            plt.figure(figsize=(10, 6))
            sns.lineplot(x='timestamp', y='bytes_sent', data=df)
            plt.title('Bytes Sent Over Time')
            plt.xticks(rotation=45)
            plt.show()
        else:
            print("Timestamp column is missing")

# Create file upload widget
file_upload = widgets.FileUpload(
    accept='.csv',  # Specify accepted file types
    multiple=False  # Only accept one file at a time
)

# Create a button to trigger the file upload
upload_button = widgets.Button(description="Upload CSV")

# Create a button for plotting
plot_button = widgets.Button(description="Plot Data")

# Global variable to hold the data
df = None

# Link upload button to the function
def on_upload_button_clicked(b):
    global df
    if file_upload.value:
        # Get the uploaded file
        uploaded_file = list(file_upload.value.values())[0]
        df = load_and_display_data(uploaded_file)
    else:
        print("No file uploaded!")

# Button action for plotting
def on_plot_button_clicked(b):
    plot_data(df)

# Set up the button actions
upload_button.on_click(on_upload_button_clicked)
plot_button.on_click(on_plot_button_clicked)

# Display the file upload widget, upload button, and plot button
display(file_upload, upload_button, plot_button)
